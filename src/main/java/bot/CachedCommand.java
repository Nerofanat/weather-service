package bot;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.util.List;
import java.util.Map;

public class CachedCommand {
    public static String execute() {
        try {
            var response = HttpClient.getInstance().sendGet("/cache");
            return formatCached(response);
        } catch (Exception e) {
            return "üòï –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: " + e.getMessage();
        }
    }

    private static String formatCached(String json) {
        try {
            ObjectMapper mapper = new ObjectMapper();
            List<Map<String, Object>> cachedData = mapper.readValue(json, new TypeReference<List<Map<String, Object>>>() {});

            // –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–æ–≤ –∏–∑ –∫—ç—à–∞
            String citiesInCache = cachedData.stream()
                    .map(map -> map.getOrDefault("city", "").toString())
                    .filter(city -> !city.isBlank())
                    .reduce((a, b) -> a + ", " + b)
                    .orElse("");

            return """
                üóÇÔ∏è –°–µ–π—á–∞—Å –≤ –∫—ç—à–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –≥–æ—Ä–æ–¥–∞–º:\n%s
                """.formatted(citiesInCache);
        } catch (Exception ex) {
            return "üòï –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö: " + ex.getMessage();
        }
    }
}