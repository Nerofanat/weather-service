package com.example.serving_web_content.bot;

import com.fasterxml.jackson.databind.ObjectMapper;

public class WeatherCommand {

    public static String execute(String city) {
        try {
            var response = HttpClient.getInstance().sendGet("/weather?city=" + city);
            return formatWeather(response);
        } catch (Exception e) {
            return "üòï –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: " + e.getMessage();
        }
    }

    private static String formatWeather(String json) {
        try {
            ObjectMapper mapper = new ObjectMapper();
            WeatherInfo weather = mapper.readValue(json, WeatherInfo.class);

            return """
                üå§ –ü–æ–≥–æ–¥–∞ –≤ %s:\n\
                - –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: %.1f ¬∞C\n\
                - –í–ª–∞–∂–Ω–æ—Å—Ç—å: %d %%\n\
                - –í–µ—Ç–µ—Ä: %s, %.1f –º/—Å\n\
                - –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: %.4f, %.4f
                """.formatted(
                    weather.getCity(),
                    weather.getTemperature(),
                    weather.getHumidity(),
                    weather.getWindDirection(),
                    weather.getWindSpeed(),
                    weather.getCoordinates().getLatitude(),
                    weather.getCoordinates().getLongitude()
            );
        } catch (Exception ex) {
            return "üòï –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö: " + ex.getMessage();
        }
    }
}