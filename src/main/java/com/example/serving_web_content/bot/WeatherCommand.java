package com.example.serving_web_content.bot;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.stereotype.Component;

@Component
public class WeatherCommand {

    public static String execute(String city) {
        try {
            var response = HttpClient.getInstance().sendGet("/weather?city=" + city);

            // –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç —Å –ø–æ–º–æ—â—å—é Jackson
            ObjectMapper mapper = new ObjectMapper();
            JsonNode root = mapper.readTree(response);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–∫–∏
            if (root.has("city") && root.get("city").asText().equals("–û—à–∏–±–∫–∞")) {
                return "üö´ –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω.";
            }

            return formatWeather(response);
        } catch (Exception e) {
            return "üòï –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: " + e.getMessage();
        }
    }

    private static String formatWeather(String json) {
        try {
            ObjectMapper mapper = new ObjectMapper();
            WeatherInfo weather = mapper.readValue(json, WeatherInfo.class);

            return """
                üå§ –ü–æ–≥–æ–¥–∞ –≤ %s:\n\
                - –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: %.1f ¬∞C\n\
                - –í–ª–∞–∂–Ω–æ—Å—Ç—å: %d %%\n\
                - –í–µ—Ç–µ—Ä: %s, %.1f –º/—Å\n\
                - –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: %.4f, %.4f
                """.formatted(
                    weather.getCity(),
                    weather.getTemperature(),
                    weather.getHumidity(),
                    weather.getWindDirection(),
                    weather.getWindSpeed(),
                    weather.getCoordinates().getLatitude(),
                    weather.getCoordinates().getLongitude()
            );
        } catch (Exception ex) {
            return "üòï –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö: " + ex.getMessage();

        }
    }
}